{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css'; // function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [{\n        name: 'Frankenstein',\n        id: 'monster1'\n      }, {\n        name: 'Dracula',\n        id: 'monster2'\n      }, {\n        name: 'Zombie',\n        id: 'monster3'\n      }]\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.monsters.map(monster => /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [monster.name, \" \"]\n      }, monster.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/react/monsters-rolodex/src/App.js"],"names":["React","Component","logo","App","constructor","state","monsters","name","id","componentDidMount","fetch","then","response","json","users","setState","render","map","monster"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AACzBG,EAAAA,WAAW,GAAE;AACX;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CACV;AACEC,QAAAA,IAAI,EAAG,cADT;AAEEC,QAAAA,EAAE,EAAG;AAFP,OADU,EAKV;AACED,QAAAA,IAAI,EAAG,SADT;AAEEC,QAAAA,EAAE,EAAG;AAFP,OALU,EASV;AACED,QAAAA,IAAI,EAAG,QADT;AAEEC,QAAAA,EAAE,EAAG;AAFP,OATU;AADC,KAAb;AAgBH;;AAECC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAET,MAAAA,QAAQ,EAAEQ;AAAZ,KAAd,CAFf;AAID;;AAEDE,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAEI,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAwBC,OAAO,iBAC5B;AAAA,mBAAyBA,OAAO,CAACX,IAAjC;AAAA,SAAUW,OAAO,CAACV,EAAlB;AAAA;AAAA;AAAA;AAAA,cADH;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAtCwB;;AAyC3B,eAAeL,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [\n      {\n        name : 'Frankenstein',\n        id : 'monster1'\n      },\n      {\n        name : 'Dracula',\n        id : 'monster2'\n      },\n      {\n        name : 'Zombie',\n        id : 'monster3'\n      }\n    ]\n  };\n}\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users}));\n    \n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        {\n          this.state.monsters.map(monster => (\n             <h1 key={ monster.id }>{ monster.name } </h1>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}